filter (k, gender = 'M')
filter (k, gender = M)
filter (k, gender = 'M')
k
filter (k, gender == 'M')
filter (k, gender == 'F')
k <- kid.weights
k <- filter (k, gender == 'M')
arrange(k, age)
by_age <- group_by(k, age)
summarise(by_age, mean_w = round(mean(weight),1), mean_h = round(mean(height),1), amt = n())
by_age <- group_by(k, age)
s <- summarise(by_age, mean_w = round(mean(weight),1), mean_h = round(mean(height),1), amt = n())
s
select (s, age = 3)
s
s
select (s, age == 3)
s
s[,age=3]
s[,age==3]
head(s)
s[,age]
s[,'age']
s[,'age'==3]
class(s)
k <- tbl_df(kid.weights)
k
k <- filter (k, gender == 'M')
arrange(k, age)
by_age <- group_by(k, age)
summarise(by_age, mean_w = round(mean(weight),1), mean_h = round(mean(height),1), amt = n())
by_age
select (k, age)
summarise(k, mean_w = round(mean(weight),1), mean_h = round(mean(height),1), amt = n())
by_age <- group_by(k, age)
summarise(by_age, mean_w = round(mean(weight),1), mean_h = round(mean(height),1), amt = n())
by_age <- group_by(k, age)
s <- summarise(by_age, mean_w = round(mean(weight),1), mean_h = round(mean(height),1), amt = n())
s
mutate (s, bmi = 1)
s
mutate (s, bmi = (weight / 2.2046) / ((height*2.54/100)^2)   )
mutate (s, bmi = (weight / 2.2046)   )
head(s)
mutate (s, bmi = (mean_w / 2.2046) / ((mean_h*2.54/100)^2)   )
s <- mutate (s, bmi = (mean_w / 2.2046) / ((mean_h*2.54/100)^2)   )
head(s)
by_age <- group_by(k, age)
s <- summarise(by_age, mean_w = round(mean(weight),1), mean_h = round(mean(height),1), amt = n())
s
s <- mutate (s, bmi = round( (mean_w / 2.2046) / ((mean_h*2.54/100)^2),1) )
head(s)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
s
s[1,1]
s[1,1]
runApp()
runApp()
runApp()
head(s,1)
select (s, age)
select (s, age)[1]
select (s, age)[1,1]
s[1,1]
runApp()
runApp()
runApp()
s
s[age==3]
s[,age==3]
s
class(s)
filer(s, age==3)
filter(s, age==3)
filter(s, age==3)
class(s)
runApp()
s
filter(s, age==9)
filter(s, age==9)[1,1]
s
head(s)
s[,"mean_w"]
s3 <- filter(s, age==3)
s3
s3[,"mean_w"]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp("C:\\git\\ShinyEx2\\")
runApp("C:\\git\\ShinyEx2\\")
runApp("C:\\git\\ShinyEx2\\")
runApp("C:\\git\\ShinyEx2\\")
runApp("C:\\git\\ShinyEx2\\")
runApp("C:\\git\\ShinyEx2\\")
runApp("C:\\git\\ShinyEx2\\")
runApp("C:\\git\\ShinyEx2\\")
runApp("C:\\git\\ShinyEx2\\")
runApp("C:\\git\\ShinyEx2\\")
runApp("C:\\git\\ShinyEx2\\")
runApp("C:\\git\\ShinyEx2\\")
mtcars[1,]
mtcars[1,"mpg"]
mtcars[1,1]
a <-mtcars
View(a)
mtcars[1,"row.names"]
mtcars[1,"mpg"]
runApp("C:\\git\\ShinyEx2\\")
runApp("C:\\git\\ShinyEx2\\")
runApp("C:\\git\\ShinyEx2\\")
runApp("C:\\git\\ShinyEx2\\")
"a"
"a" + 3
"a" + "3"
c("a", "3")
"a" || "3"
runApp("C:\\git\\ShinyEx2\\")
runApp("C:\\git\\ShinyEx2\\")
runApp()
runApp()
runApp()
runApp()
runApp()
head(s)
head(s)
runApp()
s
s
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
plot(weight,height,pch=as.character(gender))
plot(k, weight,height,pch=as.character(gender))
plot(weight,height)
?plot
s
k
k <- kid.weights
k <- filter (k, gender == M)
k <- kid.weights
k <- filter (k, gender == "M")
k
plot(k.weight, k.height)
plot(k$weight, k$height)
?plot
plot(k$weight, k$height)
points(x=50,y=80)
d<-plot(k$weight, k$height)
d<-points(x=80,y=20)
d
plot(k$weight, k$height)
d<-points(x=80,y=20)
d<-points(x=80,y=20, colour='red')
d<-points(x=80,y=20, color='red')
?points
d<-points(x=80,y=20, col='red')
d<-points(x=80,y=20, col='red', lwd=10)
d<-points(x=80,y=20, col='red', lwd=5)
points(x=80,y=20, col='red', lwd=5)
plot(k$weight, k$height)
points(x=80,y=20, col='red', lwd=5)
points(x=80,y=20, col='red', lwd=)
points(x=80,y=20, col='red', lwd=6)
points(x=80,y=20, col='red', lwd=6)
points(x=80,y=20, col='red', lwd=6, labels="aa")
points(x=80,y=20, col='red', lwd=6, label="aa")
require(stats) # for rnorm
plot(-4:4, -4:4, type = "n")  # setting up coord. system
points(rnorm(200), rnorm(200), col = "red")
points(rnorm(100)/2, rnorm(100)/2, col = "blue", cex = 1.5)
plot(k$weight, k$height)
points(x=80,y=20, col='red', lwd=6)
require(stats) # for rnorm
plot(-4:4, -4:4, type = "n")  # setting up coord. system
points(rnorm(200), rnorm(200), col = "red")
points(rnorm(100)/2, rnorm(100)/2, col = "blue", cex = 1.5)
op <- par(bg = "light blue")
x <- seq(0, 2*pi, len = 51)
## something "between type='b' and type='o'":
plot(x, sin(x), type = "o", pch = 21, bg = par("bg"), col = "blue", cex = .6,
main = 'plot(..., type="o", pch=21, bg=par("bg"))')
par(op)
png("pch.png", height = 0.7, width = 7, res = 100, units = "in")
par(mar = rep(0,4))
plot(c(-1, 26), 0:1, type = "n", axes = FALSE)
text(0:25, 0.6, 0:25, cex = 0.5)
points(0:25, rep(0.3, 26), pch = 0:25, bg = "grey")
pchShow <-
function(extras = c("*",".", "o","O","0","+","-","|","%","#"),
cex = 3, ## good for both .Device=="postscript" and "x11"
col = "red3", bg = "gold", coltext = "brown", cextext = 1.2,
main = paste("plot symbols :  points (...  pch = *, cex =",
cex,")"))
{
nex <- length(extras)
np  <- 26 + nex
ipch <- 0:(np-1)
k <- floor(sqrt(np))
dd <- c(-1,1)/2
rx <- dd + range(ix <- ipch %/% k)
ry <- dd + range(iy <- 3 + (k-1)- ipch %% k)
pch <- as.list(ipch) # list with integers & strings
if(nex > 0) pch[26+ 1:nex] <- as.list(extras)
plot(rx, ry, type = "n", axes  =  FALSE, xlab = "", ylab = "", main = main)
abline(v = ix, h = iy, col = "lightgray", lty = "dotted")
for(i in 1:np) {
pc <- pch[[i]]
## 'col' symbols with a 'bg'-colored interior (where available) :
points(ix[i], iy[i], pch = pc, col = col, bg = bg, cex = cex)
if(cextext > 0)
text(ix[i] - 0.3, iy[i], pc, col = coltext, cex = cextext)
}
}
pchShow()
pchShow(c("o","O","0"), cex = 2.5)
pchShow(NULL, cex = 4, cextext = 0, main = NULL)
TestChars <- function(sign = 1, font = 1, ...)
{
MB <- l10n_info()$MBCS
r <- if(font == 5) { sign <- 1; c(32:126, 160:254)
} else if(MB) 32:126 else 32:255
if (sign == -1) r <- c(32:126, 160:255)
par(pty = "s")
plot(c(-1,16), c(-1,16), type = "n", xlab = "", ylab = "",
xaxs = "i", yaxs = "i",
main = sprintf("sign = %d, font = %d", sign, font))
grid(17, 17, lty = 1) ; mtext(paste("MBCS:", MB))
for(i in r) try(points(i%%16, i%/%16, pch = sign*i, font = font,...))
}
TestChars()
try(TestChars(sign = -1))
TestChars(font = 5)  # Euro might be at 160 (0+10*16).
# Mac OS has apple at 240 (0+15*16).
try(TestChars(-1, font = 2))  # bold
install.packages("calibrate")
library(calibrate)
plot(k$weight, k$height)
plot(k$weight, k$height)
textxy(80, 20, "a")
textxy(80, 20, col='red',"a")
x <- rnorm(50)
y <- rnorm(50)
plot(x,y,asp=1)
textxy(x,y,1:50,m=c(mean(x),mean(y)))
plot(k$weight, k$height)
textxy(80, 20, cex=10, col='red',"a")
textxy(80, 20, cex=1, col='red',"a")
textxy(80, 20, cex=1, col='red',"*")
textxy(80, 20, cex=1, col='red',"your kid is here")
textxy(80, 20, cex=1, col='red',"* - your kid is here")
plot(k$weight, k$height)
textxy(80, 20, cex=1, col='red',"* - your kid is here")
textxy(80, 20, cex=1, col='red',"* -> your kid is here")
plot(k$weight, k$height)
textxy(80, 20, cex=1, col='red',"* -> your kid is here")
runapp()
runAppp()
runApp()
runApp()
runApp()
install.packages("calibrate")
runApp()
runApp()
runApp()
runApp()
?plot
plot(k$weight, k$height)
plot(k$weight, k$height, xlab="weight", ylab="Height")
plot(x = k$weight, y = k$height, xlab="weight", ylab="Height")
plot(x = k$weight, y = k$height, xlab="weight", ylab="Height", w=100)
plot(x = k$weight, y = k$height, xlab="weight", ylab="Height")
plot(x = k$weight, y = k$height, xlab="weight", ylab="Height", width=100)
plot(x = k$weight, y = k$height, xlab="weight", ylab="Height")
T
T
runApp()
runApp()
runApp()
k <- kid.weights
k <- filter (k, gender == "M")
k
arrange(k, age)
filter (k, age<10)
filter (k, age>10 && age <15)
filter (k, age>10 andage <15)
filter (k, age>10 and age <15)
filter (k, age>10 | age <15)
filter (k, age>10 & age <15)
runApp()
runApp()
runApp()
runApp()
?plot
k
min(k[,weight])
k[,weight]
head(k)
k[,'weight']
min(k[,'weight'])
max(k[,'weight'])
min(k[,'height'])
max(k[,'height'])
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
plot(k$weight, k$height,  xlab="weight", ylab="Height", xlim=c(0, 150), ylim=c(0, 67))
plot(k$weight, k$height,  xlab="weight", ylab="Height", xlim=c(0, 150), ylim=c(0, 67) main ="aa")
?plot
plot(k$weight, k$height,  xlab="weight", ylab="Height", xlim=c(0, 150), ylim=c(0, 67), main ="aa")
plot(k$weight, k$height,  xlab="weight", ylab="Height", xlim=c(0, 150), ylim=c(0, 67), main ="aa")
plot(k$weight, k$height,  xlab="weight", ylab="Height", xlim=c(0, 150), ylim=c(0, 67) main ="aa")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
plot(table(rpois(100, 5)), type = "h", col = "red", lwd = 10,
main = "rpois(100, lambda = 5)")
d <- plot(k$weight, k$height,  xlab="weight", ylab="Height", xlim=c(0, 150), ylim=c(0, 67) , main= "asd asd wqe qrqe rer")
runApp()
runApp()
runApp()
runApp()
runApp()
gender <- "m"
cbind("Weight X height for ",  gender)
c("Weight X height for ", gender )
"a" + "b"
"a" + "bx <- c("Hello", "World")"
x <- c("Hello", "World")
x
paste(x, collapse="--")
paste (x)
runApp()
runApp()
tmp = paste("GAD", "AB", sep = ",")
tmp
runApp()
runApp()
runApp()
runApp()
s
avg_bmi <- s[1,"bmi"]
avg_bmi
kid_bmi <-  round( (30 / 2.2046) / ((20*2.54/100)^2),1)
kid_bmi\avg_bmi
kid_bmi \ avg_bmi
kid_bmi / avg_bmi
kid_bmi * 100 / avg_bmi
round(kid_bmi * 100 / avg_bmi)
round(kid_bmi * 100 / avg_bmi,2)
kid_bmi * 100 / avg_bmi
kid_bmi / avg_bmi
round(kid_bmi * 100 / avg_bmi,2)
round(kid_bmi * 100 / avg_bmi,0)
s[1,]
kid_bmi <-  round( (10 / 2.2046) / ((20*2.54/100)^2),1)
kid_bmi
kid_bmi <-  round( (13.3 / 2.2046) / ((23.7*2.54/100)^2),1)
kid_bmi
kid_bmi <-  round( (13.3 / 2.2046) / ((50*2.54/100)^2),1)
kid_bmi
round(kid_bmi * 100 / avg_bmi,0)
kid_bmi * 100 / avg_bmi
kid_bmi / avg_bmi
kid_bmi <-  round( (13.3 / 2.2046) / ((23.7*2.54/100)^2),1)
kid_bmi / avg_bmi
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
s
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
kid_bmi <- 19.5
avg_bmi <- 39
dif <- kid_bmi / avg_bmi
dif
kid_bmi <- 39
avg_bmi <- 19.5
dif <- kid_bmi / avg_bmi
dif
runApp()
runApp()
kid_bmi <- 9.75
dif
dif <- kid_bmi / avg_bmi
dif
runApp()
runApp()
k <- kid.weights
k <- filter (k, gender == "M")
by_age <- group_by(k, age)
s <- summarise(by_age, mean_w = round(mean(weight),1), mean_h = round(mean(height),1), amt = n())
s <- mutate (s, bmi = round( (mean_w / 2.2046) / ((mean_h*2.54/100)^2),1) )
s
runApp()
plot(k$weight, k$height,  xlab="weight", ylab="Height", xlim=c(0, 150), ylim=c(0, 67) , main= t)
?plot
plot(k$weight, k$height,  xlab="weight", ylab="Height", xlim=c(0, 150), ylim=c(0, 67) , main= t)
text(k$weight, k$height, row.names(age), cex=0.6, pos=4, col="red")
p<-plot(k$weight, k$height,  xlab="weight", ylab="Height", xlim=c(0, 150), ylim=c(0, 67) , main= t)
p<-text(k$weight, k$height, row.names(age), cex=0.6, pos=4, col="red")
p
attach(mtcars)
plot(wt, mpg, main="Milage vs. Car Weight",
xlab="Weight", ylab="Mileage", pch=18, col="blue")
text(wt, mpg, row.names(mtcars), cex=0.6, pos=4, col="red")
attach(mtcars)
plot(wt, mpg, main="Milage vs. Car Weight",  xlab="Weight", ylab="Mileage", pch=18, col="blue")
text(wt, mpg, row.names(mtcars), cex=0.6, pos=4, col="red")
plot(k$weight, k$height,  xlab="weight", ylab="Height", xlim=c(0, 150), ylim=c(0, 67) , main= t)
text(k$weight, k$height, row.names(k), cex=0.6, pos=4, col="red")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
A sample from the data presented in the NHANES III survey (http://www.cdc.gov/nchs/nhanes.htm). This survey is used to form the CDC Growth Charts (http://www.cdc.gov/growthcharts)       for childrenA sample from the data presented in the NHANES III survey (http://www.cdc.gov/nchs/nhanes.htm). This survey is used to form the CDC Growth Charts (http://www.cdc.gov/growthcharts)       for children
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shinyapps::deployApp("c:\\git\\CourseraDataProductsProject")
library(UsingR)
shinyapps::deployApp("c:\\git\\CourseraDataProductsProject")
runApp()
runApp()
k <- kid.weights
k <- filter (k, gender == s)
k <- kid.weights
k <- filter (k, gender == "M")
k
by_age <- group_by(k, age)
s <- summarise(by_age, mean_w = round(mean(weight),1), meran_h = round(mean(height),1), amt = n())
runApp()
runApp()
shinyapps::deployApp("c:\\git\\CourseraDataProductsProject")
k
